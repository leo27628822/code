$date
	Tue May 24 20:41:19 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_ALU $end
$var wire 32 ! out [31:0] $end
$var reg 32 " ans [31:0] $end
$var reg 1 # clk $end
$var reg 6 $ ctrl [5:0] $end
$var reg 32 % inputA [31:0] $end
$var reg 32 & inputB [31:0] $end
$var reg 1 ' rst $end
$var integer 32 ( eof [31:0] $end
$var integer 32 ) fp_r [31:0] $end
$var integer 32 * fp_r_ans [31:0] $end
$var integer 32 + tmp [31:0] $end
$scope module alu $end
$var wire 32 , Output [31:0] $end
$var wire 6 - Signal [5:0] $end
$var wire 1 # clk $end
$var wire 32 . dataA [31:0] $end
$var wire 32 / dataB [31:0] $end
$var wire 1 ' reset $end
$var wire 32 0 dataOut [31:0] $end
$var wire 6 1 SignaltoSHT [5:0] $end
$var wire 6 2 SignaltoMUX [5:0] $end
$var wire 6 3 SignaltoDIV [5:0] $end
$var wire 6 4 SignaltoALU [5:0] $end
$var wire 32 5 ShifterOut [31:0] $end
$var wire 32 6 LoOut [31:0] $end
$var wire 32 7 HiOut [31:0] $end
$var wire 64 8 DivAns [63:0] $end
$var wire 32 9 ALUOut [31:0] $end
$scope module ALU $end
$var wire 32 : dataA [31:0] $end
$var wire 32 ; dataB [31:0] $end
$var wire 1 ' reset $end
$var wire 32 < temp [31:0] $end
$var wire 32 = dataOut [31:0] $end
$var wire 1 > c9 $end
$var wire 1 ? c8 $end
$var wire 1 @ c7 $end
$var wire 1 A c6 $end
$var wire 1 B c5 $end
$var wire 1 C c4 $end
$var wire 1 D c32 $end
$var wire 1 E c31 $end
$var wire 1 F c30 $end
$var wire 1 G c3 $end
$var wire 1 H c29 $end
$var wire 1 I c28 $end
$var wire 1 J c27 $end
$var wire 1 K c26 $end
$var wire 1 L c25 $end
$var wire 1 M c24 $end
$var wire 1 N c23 $end
$var wire 1 O c22 $end
$var wire 1 P c21 $end
$var wire 1 Q c20 $end
$var wire 1 R c2 $end
$var wire 1 S c19 $end
$var wire 1 T c18 $end
$var wire 1 U c17 $end
$var wire 1 V c16 $end
$var wire 1 W c15 $end
$var wire 1 X c14 $end
$var wire 1 Y c13 $end
$var wire 1 Z c12 $end
$var wire 1 [ c11 $end
$var wire 1 \ c10 $end
$var wire 1 ] c1 $end
$var wire 1 ^ c0 $end
$var wire 6 _ Signal [5:0] $end
$scope module uA1 $end
$var wire 1 ^ cin $end
$var wire 1 ` dataA $end
$var wire 1 a dataB $end
$var wire 1 ' reset $end
$var wire 1 b dataOut $end
$var wire 1 ] cout $end
$var wire 6 c Signal [5:0] $end
$upscope $end
$scope module uA10 $end
$var wire 1 d dataA $end
$var wire 1 e dataB $end
$var wire 1 ' reset $end
$var wire 1 f dataOut $end
$var wire 1 \ cout $end
$var wire 1 > cin $end
$var wire 6 g Signal [5:0] $end
$upscope $end
$scope module uA11 $end
$var wire 1 \ cin $end
$var wire 1 h dataA $end
$var wire 1 i dataB $end
$var wire 1 ' reset $end
$var wire 1 j dataOut $end
$var wire 1 [ cout $end
$var wire 6 k Signal [5:0] $end
$upscope $end
$scope module uA12 $end
$var wire 1 [ cin $end
$var wire 1 l dataA $end
$var wire 1 m dataB $end
$var wire 1 ' reset $end
$var wire 1 n dataOut $end
$var wire 1 Z cout $end
$var wire 6 o Signal [5:0] $end
$upscope $end
$scope module uA13 $end
$var wire 1 Z cin $end
$var wire 1 p dataA $end
$var wire 1 q dataB $end
$var wire 1 ' reset $end
$var wire 1 r dataOut $end
$var wire 1 Y cout $end
$var wire 6 s Signal [5:0] $end
$upscope $end
$scope module uA14 $end
$var wire 1 Y cin $end
$var wire 1 t dataA $end
$var wire 1 u dataB $end
$var wire 1 ' reset $end
$var wire 1 v dataOut $end
$var wire 1 X cout $end
$var wire 6 w Signal [5:0] $end
$upscope $end
$scope module uA15 $end
$var wire 1 X cin $end
$var wire 1 x dataA $end
$var wire 1 y dataB $end
$var wire 1 ' reset $end
$var wire 1 z dataOut $end
$var wire 1 W cout $end
$var wire 6 { Signal [5:0] $end
$upscope $end
$scope module uA16 $end
$var wire 1 W cin $end
$var wire 1 | dataA $end
$var wire 1 } dataB $end
$var wire 1 ' reset $end
$var wire 1 ~ dataOut $end
$var wire 1 V cout $end
$var wire 6 !" Signal [5:0] $end
$upscope $end
$scope module uA17 $end
$var wire 1 V cin $end
$var wire 1 "" dataA $end
$var wire 1 #" dataB $end
$var wire 1 ' reset $end
$var wire 1 $" dataOut $end
$var wire 1 U cout $end
$var wire 6 %" Signal [5:0] $end
$upscope $end
$scope module uA18 $end
$var wire 1 U cin $end
$var wire 1 &" dataA $end
$var wire 1 '" dataB $end
$var wire 1 ' reset $end
$var wire 1 (" dataOut $end
$var wire 1 T cout $end
$var wire 6 )" Signal [5:0] $end
$upscope $end
$scope module uA19 $end
$var wire 1 T cin $end
$var wire 1 *" dataA $end
$var wire 1 +" dataB $end
$var wire 1 ' reset $end
$var wire 1 ," dataOut $end
$var wire 1 S cout $end
$var wire 6 -" Signal [5:0] $end
$upscope $end
$scope module uA2 $end
$var wire 1 ] cin $end
$var wire 1 ." dataA $end
$var wire 1 /" dataB $end
$var wire 1 ' reset $end
$var wire 1 0" dataOut $end
$var wire 1 R cout $end
$var wire 6 1" Signal [5:0] $end
$upscope $end
$scope module uA20 $end
$var wire 1 S cin $end
$var wire 1 2" dataA $end
$var wire 1 3" dataB $end
$var wire 1 ' reset $end
$var wire 1 4" dataOut $end
$var wire 1 Q cout $end
$var wire 6 5" Signal [5:0] $end
$upscope $end
$scope module uA21 $end
$var wire 1 Q cin $end
$var wire 1 6" dataA $end
$var wire 1 7" dataB $end
$var wire 1 ' reset $end
$var wire 1 8" dataOut $end
$var wire 1 P cout $end
$var wire 6 9" Signal [5:0] $end
$upscope $end
$scope module uA22 $end
$var wire 1 P cin $end
$var wire 1 :" dataA $end
$var wire 1 ;" dataB $end
$var wire 1 ' reset $end
$var wire 1 <" dataOut $end
$var wire 1 O cout $end
$var wire 6 =" Signal [5:0] $end
$upscope $end
$scope module uA23 $end
$var wire 1 O cin $end
$var wire 1 >" dataA $end
$var wire 1 ?" dataB $end
$var wire 1 ' reset $end
$var wire 1 @" dataOut $end
$var wire 1 N cout $end
$var wire 6 A" Signal [5:0] $end
$upscope $end
$scope module uA24 $end
$var wire 1 N cin $end
$var wire 1 B" dataA $end
$var wire 1 C" dataB $end
$var wire 1 ' reset $end
$var wire 1 D" dataOut $end
$var wire 1 M cout $end
$var wire 6 E" Signal [5:0] $end
$upscope $end
$scope module uA25 $end
$var wire 1 M cin $end
$var wire 1 F" dataA $end
$var wire 1 G" dataB $end
$var wire 1 ' reset $end
$var wire 1 H" dataOut $end
$var wire 1 L cout $end
$var wire 6 I" Signal [5:0] $end
$upscope $end
$scope module uA26 $end
$var wire 1 L cin $end
$var wire 1 J" dataA $end
$var wire 1 K" dataB $end
$var wire 1 ' reset $end
$var wire 1 L" dataOut $end
$var wire 1 K cout $end
$var wire 6 M" Signal [5:0] $end
$upscope $end
$scope module uA27 $end
$var wire 1 K cin $end
$var wire 1 N" dataA $end
$var wire 1 O" dataB $end
$var wire 1 ' reset $end
$var wire 1 P" dataOut $end
$var wire 1 J cout $end
$var wire 6 Q" Signal [5:0] $end
$upscope $end
$scope module uA28 $end
$var wire 1 J cin $end
$var wire 1 R" dataA $end
$var wire 1 S" dataB $end
$var wire 1 ' reset $end
$var wire 1 T" dataOut $end
$var wire 1 I cout $end
$var wire 6 U" Signal [5:0] $end
$upscope $end
$scope module uA29 $end
$var wire 1 I cin $end
$var wire 1 V" dataA $end
$var wire 1 W" dataB $end
$var wire 1 ' reset $end
$var wire 1 X" dataOut $end
$var wire 1 H cout $end
$var wire 6 Y" Signal [5:0] $end
$upscope $end
$scope module uA3 $end
$var wire 1 R cin $end
$var wire 1 Z" dataA $end
$var wire 1 [" dataB $end
$var wire 1 ' reset $end
$var wire 1 \" dataOut $end
$var wire 1 G cout $end
$var wire 6 ]" Signal [5:0] $end
$upscope $end
$scope module uA30 $end
$var wire 1 H cin $end
$var wire 1 ^" dataA $end
$var wire 1 _" dataB $end
$var wire 1 ' reset $end
$var wire 1 `" dataOut $end
$var wire 1 F cout $end
$var wire 6 a" Signal [5:0] $end
$upscope $end
$scope module uA31 $end
$var wire 1 F cin $end
$var wire 1 b" dataA $end
$var wire 1 c" dataB $end
$var wire 1 ' reset $end
$var wire 1 d" dataOut $end
$var wire 1 E cout $end
$var wire 6 e" Signal [5:0] $end
$upscope $end
$scope module uA32 $end
$var wire 1 E cin $end
$var wire 1 f" dataA $end
$var wire 1 g" dataB $end
$var wire 1 ' reset $end
$var wire 1 h" dataOut $end
$var wire 1 D cout $end
$var wire 6 i" Signal [5:0] $end
$upscope $end
$scope module uA4 $end
$var wire 1 G cin $end
$var wire 1 j" dataA $end
$var wire 1 k" dataB $end
$var wire 1 ' reset $end
$var wire 1 l" dataOut $end
$var wire 1 C cout $end
$var wire 6 m" Signal [5:0] $end
$upscope $end
$scope module uA5 $end
$var wire 1 C cin $end
$var wire 1 n" dataA $end
$var wire 1 o" dataB $end
$var wire 1 ' reset $end
$var wire 1 p" dataOut $end
$var wire 1 B cout $end
$var wire 6 q" Signal [5:0] $end
$upscope $end
$scope module uA6 $end
$var wire 1 B cin $end
$var wire 1 r" dataA $end
$var wire 1 s" dataB $end
$var wire 1 ' reset $end
$var wire 1 t" dataOut $end
$var wire 1 A cout $end
$var wire 6 u" Signal [5:0] $end
$upscope $end
$scope module uA7 $end
$var wire 1 A cin $end
$var wire 1 v" dataA $end
$var wire 1 w" dataB $end
$var wire 1 ' reset $end
$var wire 1 x" dataOut $end
$var wire 1 @ cout $end
$var wire 6 y" Signal [5:0] $end
$upscope $end
$scope module uA8 $end
$var wire 1 @ cin $end
$var wire 1 z" dataA $end
$var wire 1 {" dataB $end
$var wire 1 ' reset $end
$var wire 1 |" dataOut $end
$var wire 1 ? cout $end
$var wire 6 }" Signal [5:0] $end
$upscope $end
$scope module uA9 $end
$var wire 1 ? cin $end
$var wire 1 ~" dataA $end
$var wire 1 !# dataB $end
$var wire 1 ' reset $end
$var wire 1 "# dataOut $end
$var wire 1 > cout $end
$var wire 6 ## Signal [5:0] $end
$upscope $end
$upscope $end
$scope module ALUControl $end
$var wire 6 $# Signal [5:0] $end
$var wire 6 %# SignaltoALU [5:0] $end
$var wire 6 &# SignaltoDIV [5:0] $end
$var wire 6 '# SignaltoMUX [5:0] $end
$var wire 6 (# SignaltoSHT [5:0] $end
$var wire 1 # clk $end
$var reg 7 )# counter [6:0] $end
$var reg 6 *# temp [5:0] $end
$upscope $end
$scope module Divider $end
$var wire 6 +# Signal [5:0] $end
$var wire 1 # clk $end
$var wire 32 ,# dataA [31:0] $end
$var wire 32 -# dataB [31:0] $end
$var wire 64 .# dataOut [63:0] $end
$var wire 1 ' reset $end
$var reg 64 /# temp [63:0] $end
$upscope $end
$scope module HiLo $end
$var wire 64 0# DivAns [63:0] $end
$var wire 1 # clk $end
$var wire 1 ' reset $end
$var wire 32 1# LoOut [31:0] $end
$var wire 32 2# HiOut [31:0] $end
$var reg 64 3# HiLo [63:0] $end
$upscope $end
$scope module MUX $end
$var wire 32 4# ALUOut [31:0] $end
$var wire 32 5# HiOut [31:0] $end
$var wire 32 6# LoOut [31:0] $end
$var wire 6 7# Signal [5:0] $end
$var wire 32 8# dataOut [31:0] $end
$var wire 32 9# Shifter [31:0] $end
$upscope $end
$scope module Shifter $end
$var wire 6 :# Signal [5:0] $end
$var wire 32 ;# dataA [31:0] $end
$var wire 32 <# dataB [31:0] $end
$var wire 1 ' reset $end
$var wire 32 =# dataOut [31:0] $end
$var reg 32 ># temp [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 >#
b0 =#
bx <#
bx ;#
bx :#
b0 9#
bx 8#
bx 7#
b0 6#
b0 5#
bx 4#
b0 3#
b0 2#
b0 1#
b0 0#
b0 /#
b0 .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
x"#
x!#
x~"
bx }"
x|"
x{"
xz"
bx y"
xx"
xw"
xv"
bx u"
xt"
xs"
xr"
bx q"
xp"
xo"
xn"
bx m"
xl"
xk"
xj"
bx i"
xh"
xg"
xf"
bx e"
xd"
xc"
xb"
bx a"
x`"
x_"
x^"
bx ]"
x\"
x["
xZ"
bx Y"
xX"
xW"
xV"
bx U"
xT"
xS"
xR"
bx Q"
xP"
xO"
xN"
bx M"
xL"
xK"
xJ"
bx I"
xH"
xG"
xF"
bx E"
xD"
xC"
xB"
bx A"
x@"
x?"
x>"
bx ="
x<"
x;"
x:"
bx 9"
x8"
x7"
x6"
bx 5"
x4"
x3"
x2"
bx 1"
x0"
x/"
x."
bx -"
x,"
x+"
x*"
bx )"
x("
x'"
x&"
bx %"
x$"
x#"
x""
bx !"
x~
x}
x|
bx {
xz
xy
xx
bx w
xv
xu
xt
bx s
xr
xq
xp
bx o
xn
xm
xl
bx k
xj
xi
xh
bx g
xf
xe
xd
bx c
xb
xa
x`
bx _
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
bx =
bx <
bx ;
bx :
bx 9
b0 8
b0 7
b0 6
b0 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
b0 +
bx *
bx )
b0 (
1'
bx &
bx %
bx $
1#
bx "
bx !
$end
#5
0#
#10
b1000 !
b1000 ,
b1000 0
b1000 8#
b1000 9
b1000 =
b1000 4#
0"#
0|"
0x"
0t"
0p"
1l"
0h"
0d"
0`"
0\"
0X"
0T"
0P"
0L"
0H"
0D"
0@"
0<"
08"
04"
00"
0,"
0("
0$"
0~
0z
0v
0r
0n
0j
0f
b1000 <
0b
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
b100100 2
b100100 '#
b100100 7#
b100100 3
b100100 &#
b100100 +#
b100100 1
b100100 (#
b100100 :#
b100100 4
b100100 _
b100100 c
b100100 g
b100100 k
b100100 o
b100100 s
b100100 w
b100100 {
b100100 !"
b100100 %"
b100100 )"
b100100 -"
b100100 1"
b100100 5"
b100100 9"
b100100 ="
b100100 A"
b100100 E"
b100100 I"
b100100 M"
b100100 Q"
b100100 U"
b100100 Y"
b100100 ]"
b100100 a"
b100100 e"
b100100 i"
b100100 m"
b100100 q"
b100100 u"
b100100 y"
b100100 }"
b100100 ##
b100100 %#
b100100 *#
0a
1/"
0["
1k"
0o"
0s"
0w"
0{"
0!#
0e
0i
0m
0q
0u
0y
0}
0#"
0'"
0+"
03"
07"
0;"
0?"
0C"
0G"
0K"
0O"
0S"
0W"
0_"
0c"
0g"
0`
0."
1Z"
1j"
0n"
0r"
0v"
0z"
0~"
0d
0h
0l
0p
0t
0x
0|
0""
0&"
0*"
02"
06"
0:"
0>"
0B"
0F"
0J"
0N"
0R"
0V"
0^"
0b"
0f"
1#
b11 +
b1010 &
b1010 /
b1010 ;
b1010 -#
b1010 <#
b1100 %
b1100 .
b1100 :
b1100 ,#
b1100 ;#
b100100 $
b100100 -
b100100 $#
b1 (
b1000 "
b10000000000000000000000000000100 *
b10000000000000000000000000000011 )
0'
#15
0#
#20
b1110 !
b1110 ,
b1110 0
b1110 8#
b1110 9
b1110 =
b1110 4#
1\"
b1110 <
10"
b100101 2
b100101 '#
b100101 7#
b100101 3
b100101 &#
b100101 +#
b100101 1
b100101 (#
b100101 :#
b100101 4
b100101 _
b100101 c
b100101 g
b100101 k
b100101 o
b100101 s
b100101 w
b100101 {
b100101 !"
b100101 %"
b100101 )"
b100101 -"
b100101 1"
b100101 5"
b100101 9"
b100101 ="
b100101 A"
b100101 E"
b100101 I"
b100101 M"
b100101 Q"
b100101 U"
b100101 Y"
b100101 ]"
b100101 a"
b100101 e"
b100101 i"
b100101 m"
b100101 q"
b100101 u"
b100101 y"
b100101 }"
b100101 ##
b100101 %#
b100101 *#
1#
b100101 $
b100101 -
b100101 $#
b1110 "
#25
0#
#30
b10110 !
b10110 ,
b10110 0
b10110 8#
1p"
b10110 9
b10110 =
b10110 4#
b10110 <
0l"
1C
b100000 2
b100000 '#
b100000 7#
b100000 3
b100000 &#
b100000 +#
b100000 1
b100000 (#
b100000 :#
b100000 4
b100000 _
b100000 c
b100000 g
b100000 k
b100000 o
b100000 s
b100000 w
b100000 {
b100000 !"
b100000 %"
b100000 )"
b100000 -"
b100000 1"
b100000 5"
b100000 9"
b100000 ="
b100000 A"
b100000 E"
b100000 I"
b100000 M"
b100000 Q"
b100000 U"
b100000 Y"
b100000 ]"
b100000 a"
b100000 e"
b100000 i"
b100000 m"
b100000 q"
b100000 u"
b100000 y"
b100000 }"
b100000 ##
b100000 %#
b100000 *#
1#
b100000 $
b100000 -
b100000 $#
b10110 "
#35
0#
#40
1D
1E
1F
1H
1I
1J
1K
1L
1M
1N
1O
1P
1Q
1S
1T
1U
1V
1W
1X
1Y
1Z
1[
1\
1>
1?
1@
b10 !
b10 ,
b10 0
b10 8#
1A
1]
b10 9
b10 =
b10 4#
0"#
0|"
0x"
0t"
0p"
1B
0l"
0h"
0d"
0`"
0\"
1G
0X"
0T"
0P"
0L"
0H"
0D"
0@"
0<"
08"
04"
10"
0,"
0("
0$"
0~
0z
0v
0r
0n
0j
0f
b10 <
0b
1^
1C
b100010 2
b100010 '#
b100010 7#
b100010 3
b100010 &#
b100010 +#
b100010 1
b100010 (#
b100010 :#
b100010 4
b100010 _
b100010 c
b100010 g
b100010 k
b100010 o
b100010 s
b100010 w
b100010 {
b100010 !"
b100010 %"
b100010 )"
b100010 -"
b100010 1"
b100010 5"
b100010 9"
b100010 ="
b100010 A"
b100010 E"
b100010 I"
b100010 M"
b100010 Q"
b100010 U"
b100010 Y"
b100010 ]"
b100010 a"
b100010 e"
b100010 i"
b100010 m"
b100010 q"
b100010 u"
b100010 y"
b100010 }"
b100010 ##
b100010 %#
b100010 *#
1#
b100010 $
b100010 -
b100010 $#
b10 "
#45
0#
#50
b0 !
b0 ,
b0 0
b0 8#
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
b0 9
b0 =
b0 4#
b101010 2
b101010 '#
b101010 7#
b101010 3
b101010 &#
b101010 +#
b101010 1
b101010 (#
b101010 :#
b101010 4
b101010 _
b101010 c
b101010 g
b101010 k
b101010 o
b101010 s
b101010 w
b101010 {
b101010 !"
b101010 %"
b101010 )"
b101010 -"
b101010 1"
b101010 5"
b101010 9"
b101010 ="
b101010 A"
b101010 E"
b101010 I"
b101010 M"
b101010 Q"
b101010 U"
b101010 Y"
b101010 ]"
b101010 a"
b101010 e"
b101010 i"
b101010 m"
b101010 q"
b101010 u"
b101010 y"
b101010 }"
b101010 ##
b101010 %#
b101010 *#
0k"
1#
b10 &
b10 /
b10 ;
b10 -#
b10 <#
b101010 $
b101010 -
b101010 $#
b0 "
#55
0#
#60
b110000 !
b110000 ,
b110000 0
b110000 8#
b110000 5
b110000 9#
b110000 =#
b110000 >#
b10 9
b10 =
b10 4#
b0 2
b0 '#
b0 7#
b0 3
b0 &#
b0 +#
b0 1
b0 (#
b0 :#
b0 4
b0 _
b0 c
b0 g
b0 k
b0 o
b0 s
b0 w
b0 {
b0 !"
b0 %"
b0 )"
b0 -"
b0 1"
b0 5"
b0 9"
b0 ="
b0 A"
b0 E"
b0 I"
b0 M"
b0 Q"
b0 U"
b0 Y"
b0 ]"
b0 a"
b0 e"
b0 i"
b0 m"
b0 q"
b0 u"
b0 y"
b0 }"
b0 ##
b0 %#
b0 *#
1#
b0 $
b0 -
b0 $#
b110000 "
#65
0#
#70
b0 !
b0 ,
b0 0
b0 8#
b11011 2
b11011 '#
b11011 7#
b11011 3
b11011 &#
b11011 +#
b11011 1
b11011 (#
b11011 :#
b11011 4
b11011 _
b11011 c
b11011 g
b11011 k
b11011 o
b11011 s
b11011 w
b11011 {
b11011 !"
b11011 %"
b11011 )"
b11011 -"
b11011 1"
b11011 5"
b11011 9"
b11011 ="
b11011 A"
b11011 E"
b11011 I"
b11011 M"
b11011 Q"
b11011 U"
b11011 Y"
b11011 ]"
b11011 a"
b11011 e"
b11011 i"
b11011 m"
b11011 q"
b11011 u"
b11011 y"
b11011 }"
b11011 ##
b11011 %#
b11011 *#
1a
1."
0Z"
b0 5
b0 9#
b0 =#
b0 >#
b1 )#
1#
b11 &
b11 /
b11 ;
b11 -#
b11 <#
b1010 %
b1010 .
b1010 :
b1010 ,#
b1010 ;#
b11011 $
b11011 -
b11011 $#
b1 "
#75
0#
#80
b10 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#85
0#
#90
b1101 7
b1101 2#
b1101 5#
b11111111111111111111111111111111 6
b11111111111111111111111111111111 1#
b11111111111111111111111111111111 6#
b11 )#
b110111111111111111111111111111111111 3#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#95
0#
#100
b100 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#105
0#
#110
b101 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#115
0#
#120
b110 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#125
0#
#130
b111 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#135
0#
#140
b1000 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#145
0#
#150
b1001 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#155
0#
#160
b1010 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#165
0#
#170
b1011 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#175
0#
#180
b1100 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#185
0#
#190
b1101 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#195
0#
#200
b1110 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#205
0#
#210
b1111 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#215
0#
#220
b10000 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#225
0#
#230
b10001 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#235
0#
#240
b10010 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#245
0#
#250
b10011 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#255
0#
#260
b10100 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#265
0#
#270
b10101 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#275
0#
#280
b10110 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#285
0#
#290
b10111 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#295
0#
#300
b11000 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#305
0#
#310
b11001 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#315
0#
#320
b11010 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#325
0#
#330
b11011 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#335
0#
#340
b11100 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#345
0#
#350
b11101 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#355
0#
#360
b11110 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#365
0#
#370
b11111 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#375
0#
#380
b111111 2
b111111 '#
b111111 7#
b111111 3
b111111 &#
b111111 +#
b111111 1
b111111 (#
b111111 :#
b111111 4
b111111 _
b111111 c
b111111 g
b111111 k
b111111 o
b111111 s
b111111 w
b111111 {
b111111 !"
b111111 %"
b111111 )"
b111111 -"
b111111 1"
b111111 5"
b111111 9"
b111111 ="
b111111 A"
b111111 E"
b111111 I"
b111111 M"
b111111 Q"
b111111 U"
b111111 Y"
b111111 ]"
b111111 a"
b111111 e"
b111111 i"
b111111 m"
b111111 q"
b111111 u"
b111111 y"
b111111 }"
b111111 ##
b111111 %#
b111111 *#
b0 )#
b110111111111111111111111111111111111 8
b110111111111111111111111111111111111 .#
b110111111111111111111111111111111111 0#
b110111111111111111111111111111111111 /#
1#
#385
0#
#390
b1 7
b1 2#
b1 5#
b11 6
b11 1#
b11 6#
b1 )#
b11011 2
b11011 '#
b11011 7#
b11011 3
b11011 &#
b11011 +#
b11011 1
b11011 (#
b11011 :#
b11011 4
b11011 _
b11011 c
b11011 g
b11011 k
b11011 o
b11011 s
b11011 w
b11011 {
b11011 !"
b11011 %"
b11011 )"
b11011 -"
b11011 1"
b11011 5"
b11011 9"
b11011 ="
b11011 A"
b11011 E"
b11011 I"
b11011 M"
b11011 Q"
b11011 U"
b11011 Y"
b11011 ]"
b11011 a"
b11011 e"
b11011 i"
b11011 m"
b11011 q"
b11011 u"
b11011 y"
b11011 }"
b11011 ##
b11011 %#
b11011 *#
b100000000000000000000000000000011 3#
b100000000000000000000000000000011 8
b100000000000000000000000000000011 .#
b100000000000000000000000000000011 0#
b100000000000000000000000000000011 /#
1#
#395
0#
#400
b10 )#
1#
#405
0#
#410
b11 )#
1#
#415
0#
#420
b1 !
b1 ,
b1 0
b1 8#
b10000 2
b10000 '#
b10000 7#
b10000 3
b10000 &#
b10000 +#
b10000 1
b10000 (#
b10000 :#
b10000 4
b10000 _
b10000 c
b10000 g
b10000 k
b10000 o
b10000 s
b10000 w
b10000 {
b10000 !"
b10000 %"
b10000 )"
b10000 -"
b10000 1"
b10000 5"
b10000 9"
b10000 ="
b10000 A"
b10000 E"
b10000 I"
b10000 M"
b10000 Q"
b10000 U"
b10000 Y"
b10000 ]"
b10000 a"
b10000 e"
b10000 i"
b10000 m"
b10000 q"
b10000 u"
b10000 y"
b10000 }"
b10000 ##
b10000 %#
b10000 *#
1#
b10000 $
b10000 -
b10000 $#
#425
0#
#430
b11 !
b11 ,
b11 0
b11 8#
b10010 2
b10010 '#
b10010 7#
b10010 3
b10010 &#
b10010 +#
b10010 1
b10010 (#
b10010 :#
b10010 4
b10010 _
b10010 c
b10010 g
b10010 k
b10010 o
b10010 s
b10010 w
b10010 {
b10010 !"
b10010 %"
b10010 )"
b10010 -"
b10010 1"
b10010 5"
b10010 9"
b10010 ="
b10010 A"
b10010 E"
b10010 I"
b10010 M"
b10010 Q"
b10010 U"
b10010 Y"
b10010 ]"
b10010 a"
b10010 e"
b10010 i"
b10010 m"
b10010 q"
b10010 u"
b10010 y"
b10010 }"
b10010 ##
b10010 %#
b10010 *#
1#
b11 "
b10010 $
b10010 -
b10010 $#
#435
0#
#440
